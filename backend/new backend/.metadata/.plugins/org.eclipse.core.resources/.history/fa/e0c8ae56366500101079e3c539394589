package com.cg.estore.orderservice.controller;

import java.math.BigInteger;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.cg.estore.orderservice.entity.OrderDetail;
import com.cg.estore.orderservice.entity.OrderInput;
import com.cg.estore.orderservice.entity.TransactionDetails;
import com.cg.estore.orderservice.serviceImpl.OrderService;
//@CrossOrigin("*")
@RestController
@RequestMapping("/orders")
public class OrderController {
    
    @Autowired
    private OrderService orderService;
    
//    @PostMapping("/placeOrder/{paymentId}")
//    public OrderDetail placeOrder(@PathVariable String paymentId) {
////    	Orders order = orderService.getOrderById(orderId);
////    	order.setOrderStatus("Ordered");
//        return orderService.placeOrder(paymentId);
//    }
    @PostMapping("/placeOrder")
    public OrderDetail placeOrder(@RequestBody OrderInput orderinput) {
    	return orderService.placeOrder(orderinput);
    }
    
    @GetMapping("/{orderId}")
    public OrderDetail getOrderById(@PathVariable String orderId) {
        return orderService.getOrderById(orderId);
    }
    @GetMapping("/all")
    public List<OrderDetail> getAllOrders() {
        return orderService.getAllOrders();
    }
    
    @DeleteMapping("/{orderId}")
    public void deleteOrderById(@PathVariable String orderId) {
        orderService.deleteOrderById(orderId);
    }
    
    @GetMapping("/user/{profileId}")
    public OrderDetail getOrderByProfileId(@PathVariable("profileId") String profileId) {
    	return orderService.getOrderByProfileId(profileId);
    }
    
    @PostMapping({"/createTransaction/{amount}"})
    public TransactionDetails createTransaction(@PathVariable(name = "amount") Double amount) {
        return orderService.createTransaction(amount);
    }
}
